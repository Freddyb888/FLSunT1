#T1
#Mnemonic3D 9/10/2024 Beta
####################################################################################################
#motor part
####################################################################################################
[stepper_a]
step_pin: PE5
dir_pin: !PD7  # motor direction pin
enable_pin: !PE1
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD4
homing_speed: 40
#position_endstop: 332
#arm_length = 335

[stepper_b]
step_pin: PB9
dir_pin: !PC7  # motor direction pin
enable_pin: !PD3
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD14
#position_endstop: 332
#arm_length = 335

[stepper_c]
step_pin: PB8
dir_pin: !PE15  # motor direction pin,"!PE2" and "PE2" represent different directions
enable_pin: !PD13
microsteps: 32
rotation_distance: 60 #rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>, 
endstop_pin: ^PE10
#position_endstop: 332 # printer printable height
#arm_length = 335

[extruder]
step_pin: PD15
dir_pin: !PB0
enable_pin: !PB1
microsteps: 16
rotation_distance: 4.41
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA5
sensor_type: Generic 3950
pullup_resistor: 510
sensor_pin: PA4
min_temp: 0 # extruder min temp
max_temp: 310 # extruder max temp
max_extrude_cross_section: 50 # default 0.640
max_extrude_only_distance: 500
pressure_advance: 0.025 
#pressure_advance: 0.041
#control:pid
#pid_Kp: 14.155
#pid_Ki: 0.303
#pid_Kd: 165.086


[tmc5160 stepper_a]
cs_pin: PD9
spi_software_sclk_pin:PD10
spi_software_miso_pin:PD8
spi_software_mosi_pin:PD11
#spi_speed:500000
sense_resistor: 0.0375
run_current: 3.1
hold_current: 1.6
stealthchop_threshold: 999999
interpolate: true

[tmc5160 stepper_b]
cs_pin: PB4
spi_software_sclk_pin:PE0
spi_software_miso_pin:PB3
spi_software_mosi_pin:PD5
#spi_speed:500000
sense_resistor: 0.0375
run_current: 3.1
hold_current: 1.6
stealthchop_threshold: 999999
interpolate: true

[tmc5160 stepper_c]
cs_pin: PC6
spi_software_sclk_pin:PD0
spi_software_miso_pin:PA8
spi_software_mosi_pin:PD1
#spi_speed:500000
sense_resistor: 0.0375
run_current: 3.1
hold_current: 1.6
stealthchop_threshold: 999999
interpolate: true


[tmc5160 extruder]
cs_pin:PC4
spi_software_sclk_pin:PA7
spi_software_mosi_pin:PA6
spi_software_miso_pin:PC5
sense_resistor: 0.0375
run_current: 1.2
hold_current: 0.300 # motor hold current

####################################################################################################
#mcu ,pin
####################################################################################################
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[fan]
pin: PE6
cycle_time: 0.00005
max_power: 0.8

[heater_fan heat_sink_fan] 
pin: PE8
heater_temp: 50.0

[heater_bed]
heater_pin: PA2
sensor_pin: PA1
sensor_type: Generic 3950
min_temp: -5
max_temp: 110 #hotbed max temp
control:pid
pid_Kp: 18.240
pid_Ki: 0.558
pid_Kd: 149.109

[temperature_sensor Armv7 mcu] #the temp of pad
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp] #the temp of mcu
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[input_shaper]
#shaper_freq_x: 34.78   # frequency for the X mark of the test model
#shaper_freq_y: 31.68  # frequency for the Y mark of the test model

[filament_switch_sensor filament_sensor]  
pause_on_runout: False
runout_gcode: 
	check_filament_sensor
switch_pin: !PE7
[gcode_macro check_filament_sensor]
variable_num: 0
gcode:
	M117 now num is {printer["gcode_macro check_filament_sensor"].num}
	{% if printer["filament_switch_sensor filament_sensor"].filament_detected %}
	  M117 not filament runout!
	  UPDATE_DELAYED_GCODE ID=check_filament_sensor_time DURATION=0
      SET_GCODE_VARIABLE MACRO=check_filament_sensor VARIABLE=num VALUE={0}
	{% else %}
	  {% set num = num + 1 %}
	  SET_GCODE_VARIABLE MACRO=check_filament_sensor VARIABLE=num VALUE={num}
	  {% if num > 5%}
	    M117 Filament Runout Detected!
		PAUSE
	    UPDATE_DELAYED_GCODE ID=check_filament_sensor_time DURATION=0
        SET_GCODE_VARIABLE MACRO=check_filament_sensor VARIABLE=num VALUE={0}
	  {% else %}
	    UPDATE_DELAYED_GCODE ID=check_filament_sensor_time DURATION=0.2
      {% endif %}
	  M117 filament runout at {printer["gcode_macro check_filament_sensor"].num} detect!
	{% endif %}
	
[delayed_gcode check_filament_sensor_time]
initial_duration: 0
gcode:
	check_filament_sensor

[printer]
kinematics: delta
max_velocity: 1000 #max print speed ,default is 400mm/s
max_accel: 30000 
max_accel_to_decel: 7000  
square_corner_velocity: 5 
max_z_velocity: 1000
#delta_radius: 171.2 # delta radius,default is 171.2
print_radius: 133 #max printable radius
minimum_z_position:-5 # min z position nozzle won't go to the position which Z lower the vaule
x_size_offset: 0   #adjust X size accuracy
y_size_offset: 0   #adjust Y size accuracy

################################################################################################################
#calibrate and bed_mesh
################################################################################################################
[delta_calibrate]
radius: 120
horizontal_move_z: 10 #This value is related to the lift height of the nozzle during delta_calibrate
Speed: 100

[probe]  
pin: !PA3
x_offset: 0 
y_offset: 0 
z_offset: -0.25 #the distance between nozzle and level switch
speed: 10
samples: 2 #probe one point three times get an average
samples_result: average  
sample_retract_dist: 5
samples_tolerance: 0.05 # precision
samples_tolerance_retries: 5 

[bed_mesh]  
speed: 50
horizontal_move_z: 7 #This value is related to the lift height of the nozzle during bed_mesh
mesh_radius: 125
mesh_origin: 0,0  
round_probe_count: 9 # 9*9
algorithm: bicubic
bicubic_tension: 0.1
move_check_distance: 3
fade_start: 0.2
fade_end: 2
fade_target: 0


#############################################################################################################
#GCODE
#############################################################################################################
[output_pin relay_pin]
pin: PD6
pwm: False
value: 0

[gcode_macro relay_on]
gcode:
    SET_PIN PIN=relay_pin VALUE=1

[gcode_macro relay_off]
gcode:
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SET_PIN PIN=relay_pin VALUE=0

[gcode_macro led_on]
gcode:
  SET_PIN PIN=LED_pin VALUE=1

[gcode_macro led_off]
gcode:
  SET_PIN PIN=LED_pin VALUE=0

[gcode_macro logo_on]
gcode:
  SET_PIN PIN=LED_logo VALUE=1

[gcode_macro logo_off]
gcode:
  SET_PIN PIN=LED_logo VALUE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
   SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

#[output_pin LED_RED]
#pin: PD1
#pwm: False
#value: 1 # 0 = off ,1 = on
#cycle_time: 0.010

#[output_pin LED_BLUE]
#pin: PD0
#pwm: False
#value: 1 # 0 = off ,1 = on
#cycle_time: 0.010

[output_pin BOXFAN_pin]
pin: PE2
pwm: False
value: 0
[gcode_macro boxfan_on]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=1

[gcode_macro boxfan_off]
gcode:
  SET_PIN PIN=BOXFAN_pin VALUE=0

[output_pin LED_GREEN]
pin: PA12
pwm: False
value: 1 # 0 = off ,1 = on
#cycle_time: 0.010

[gcode_macro screen_led_on]
gcode:
  SET_PIN PIN=LED_RED VALUE=0
  SET_PIN PIN=LED_BLUE VALUE=0
  SET_PIN PIN=LED_GREEN VALUE=0
  
[gcode_macro screen_led_off]
gcode:
  SET_PIN PIN=LED_RED VALUE=1
  SET_PIN PIN=LED_BLUE VALUE=1
  SET_PIN PIN=LED_GREEN VALUE=1

[gcode_macro MEASURING_RESONANCES] #Measuring Resonances
gcode: 
   M117 MEASURING RESONANCES START !
   G28
   SAVE_VARIABLE VARIABLE=resonances_state VALUE=True
   SHAPER_CALIBRATE
   G28
   SAVE_CONFIG

[gcode_macro Bed_Level_1]
gcode:
    SET_GCODE_OFFSET Z=0
    BED_MESH_CLEAR
  M117 BED LEVEL START !
  G28
  M204 S200
  M104 S140
  M140 S60
  M109 S140
  M190 S60
  delta_calibrate
  G1 X0 Y0 Z50 F4200
  G28
  M104 S0
  M140 S0
    SAVE_VARIABLE VARIABLE=level_state_1 VALUE=True
  SAVE_CONFIG

[gcode_macro Bed_Level_2]
gcode:
  G28
  M204 S200
  M104 S180
  M140 S60
  M109 S180
  M190 S60
  G1 X0 Y0 Z50 F4200
  bed_mesh_calibrate
  G1 X0 Y0 Z50 F4200
  M104 S0
  M140 S0
  G28
    SAVE_VARIABLE VARIABLE=level_state_2 VALUE=True
  SAVE_CONFIG

[gcode_macro UNLOAD_FILAMENT] #unload filament
gcode:
    M117 unload_filament heating completed!
    G91
    G1 E-100 F200
    G90
	M117 unload_filament done!

[gcode_macro LOAD_FILAMENT] #load filament
gcode:
    #{% if printer.extruder.temperature < 235 %}
    #  M109 S240
    #{% endif %}
    #M104 S240
    M117 load_filament heating completed!
    G91
    G1 E70 F800
    G1 E30 F300
    G90
    M117 load_filament done!
	
[gcode_macro M600]
gcode:
  PAUSE
  
[gcode_macro TMC]
gcode:
  DUMP_TMC STEPPER=stepper_a
  DUMP_TMC STEPPER=stepper_b
  DUMP_TMC STEPPER=stepper_c
  DUMP_TMC STEPPER=extruder
  


[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

[gcode_macro SET_GCODE_OFFSET]  
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    
    _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}

    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:  
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|
    {% if printer.save_variables.variables.level_state %}
        SAVE_VARIABLE VARIABLE=level_state VALUE=False
		M117 BedLevel1 Done
        bed_level_2
    {% endif %}|
	{% if printer.save_variables.variables.level2_state %}
        SAVE_VARIABLE VARIABLE=level2_state VALUE=False
        M117 BedLevel Done
    {% endif %}|
    {% if printer.save_variables.variables.resonances_state %}
        SAVE_VARIABLE VARIABLE=resonances_state VALUE=False
		G28
        M117 Vibration Compensation Done
	{% endif %}
  SAVE_VARIABLE VARIABLE=plr_flag VALUE=False 

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 172800
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

####################################################################################################################################
#PAUSE ,RESUME ,CANCEL_PRINT
####################################################################################################################################
[pause_resume]

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "printing" %}
        {% set x = params.X|default(0) %}      #edit to your park position
        {% set y = params.Y|default(-110) %}      #edit to your park position
        {% set z = params.Z|default(10)|float %} #edit to your park position
        {% set e = params.E|default(1) %}        #edit to your retract length
        ##### calculate save lift position #####
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% set lift_z = z|abs %}
        {% if act_z < (max_z - lift_z) %}
            {% set z_safe = lift_z %}
        {% else %}
            {% set z_safe = max_z - act_z %}
        {% endif %}
	    {% set fan_speed = printer.fan.speed|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
        ##### end of definitions #####
        PAUSE_BASE
        G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
          G1 E-{e} F2100
        {% else %}
          {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}    
          G1 Z{z_safe}
          G90
          G1 X{x} Y{y} F6000
        {% else %}
          {action_respond_info("Printer not homed")}
        {% endif %}
	    {% set nozzle_temp = printer.extruder.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
        M104 S90
	    M106 S204
		M400
    {% endif %}

[gcode_macro RESUME]  
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "paused" %}
      M109 S{nozzle_temp}
	  {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
    ##### end of definitions #####
      G91
      {% if nozzle_temp >= 180 %}
        G1 E{e} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %} 
	  G90
	  M400
      RESUME_BASE {get_params}
	  {% set fan_speed = fan_speed * 255 %}
      M106 S{fan_speed}
    {% endif %}

[gcode_macro SAVE_POWER_LOSS_INFO]
gcode:
    {% if printer.print_stats.state == "printing" %}
      {% set file_position = printer.virtual_sdcard.file_position %} #save file position
      SAVE_VARIABLE VARIABLE=file_position VALUE={file_position}
      {% set e_pos = printer.gcode_move.gcode_position.e %}
      SAVE_VARIABLE VARIABLE=e_pos VALUE={e_pos}
      {% set x_pos = printer.gcode_move.gcode_position.x %}
      SAVE_VARIABLE VARIABLE=x_pos VALUE={x_pos}
      {% set y_pos = printer.gcode_move.gcode_position.y %}
      SAVE_VARIABLE VARIABLE=y_pos VALUE={y_pos}
      {% set z_pos = printer.gcode_move.gcode_position.z %}
      SAVE_VARIABLE VARIABLE=z_pos VALUE={z_pos}
      {% set print_duration = printer.print_stats.print_duration %}
      SAVE_VARIABLE VARIABLE=print_duration VALUE={print_duration}
      {% set fan_speed = printer.fan.speed|float %}
      SAVE_VARIABLE VARIABLE=fan_speed VALUE={fan_speed}
      {% set nozzle_temp = printer.extruder.target|float %}
      SAVE_VARIABLE VARIABLE=nozzle_temp VALUE={nozzle_temp}
      {% set bed_temp = printer.heater_bed.target|float %}
      SAVE_VARIABLE VARIABLE=bed_temp VALUE={bed_temp}
      SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    {% endif %} 
[force_move]
enable_force_move: True

[gcode_macro RESUME_INTERRUPTED]
gcode =
    {% set file_position = printer.save_variables.variables.file_position %}
    {% set e_pos = printer.save_variables.variables.e_pos %}
    {% set x_pos = printer.save_variables.variables.x_pos %}
    {% set y_pos = printer.save_variables.variables.y_pos %}
    {% set z_pos = printer.save_variables.variables.z_pos %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.sd_filename)|string %}
    {% set print_duration = printer.save_variables.variables.print_duration %}
    {% set fan_speed = printer.save_variables.variables.fan_speed %}
    {% set nozzle_temp = printer.save_variables.variables.nozzle_temp %}
    {% set bed_temp = printer.save_variables.variables.bed_temp %}
    {% set cur_nozzle_temp = printer.extruder.temperature|float %}
    {% set cur_bed_temp = printer.heater_bed.temperature|float %}
    {% if cur_nozzle_temp < 140 %}
      M104 S140
    {% endif %}
    {% if cur_bed_temp < 50 %}
      M140 S50      
    {% endif %}
    {% if cur_nozzle_temp < 140 %}  
      M109 S140 
    {% endif %}
    {% if cur_bed_temp < 50 %}
      M190 S50 
    {% endif %}  
    G28
    SAVE_VARIABLE VARIABLE=plr_flag VALUE=True
    M104 S{nozzle_temp} ; set nozzle temperature
    M140 S{bed_temp}  ; set bed temperature
    M109 S{nozzle_temp}
    M190 S{bed_temp} 
    {% set fan_speed = fan_speed * 255 %}
    M106 S{fan_speed} ; enable fan
    G92 E{e_pos}
    G1 X{x_pos} Y{y_pos} Z{z_pos}
    POWER_LOSS_RESTART_PRINT FILENAME='{last_file}' FILEPOSITION={file_position} PRINT_DURATION={print_duration}

[gcode_macro START_PRINT_RESUME]
gcode:
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    {% set file_position = printer.save_variables.variables.file_position %}
    SAVE_VARIABLE VARIABLE=file_position VALUE='"{file_position}"'
    {% set x_pos = printer.save_variables.variables.x_pos %}
    SAVE_VARIABLE VARIABLE=x_pos VALUE='"{x_pos}"'
    {% set y_pos = printer.save_variables.variables.y_pos %}
    SAVE_VARIABLE VARIABLE=y_pos VALUE='"{y_pos}"'
    {% set z_pos = printer.save_variables.variables.z_pos %}
    SAVE_VARIABLE VARIABLE=z_pos VALUE='"{z_pos}"'
    {% set e_pos = printer.save_variables.variables.e_pos %}
    SAVE_VARIABLE VARIABLE=e_pos VALUE='"{e_pos}"'
    CLEAR_PAUSE

[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2
##############################################################################################
##############################################################################################
[gcode_macro START_PRINT]
gcode:
    relay_on
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    SAVE_VARIABLE VARIABLE=file_position VALUE=0
    SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
	SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
	CLEAR_PAUSE
	M106 S255
	boxfan_on

[gcode_macro END_PRINT]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
	boxfan_off
	SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
	M106 S255
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100
	
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  M106 S0
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G28
  SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  boxfan_off
  M106 S255
  UPDATE_DELAYED_GCODE ID=heatsink DURATION=100

[delayed_gcode heatsink]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    M106 S0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0	
###########################################################################################################################
###########################################################################################################################
[virtual_sdcard]
path: ~/printer_data/gcodes

[save_variables]
filename: ~/savedVariables1.cfg
   
[gcode_arcs]

[include timelapse.cfg] #Load the camera recording function

[display_status]


[resonance_tester]
probe_points:0, 0, 20
accel_chip: adxl345
min_freq: 1
max_freq: 100
accel_per_hz: 300

[adxl345]
cs_pin:PE11
spi_software_sclk_pin:PE14
spi_software_mosi_pin:PE13
spi_software_miso_pin:PE12
rate:1600

# EXP1 / EXP2 (display) pins
#[board_pins]
#aliases:
    # EXP1 header
#    EXP1_1=PC1, EXP1_3=PA4, EXP1_5=PA6, EXP1_7=PC4, EXP1_9=<GND>,
#    EXP1_2=PC3, EXP1_4=PA5, EXP1_6=PA7, EXP1_8=PC5, EXP1_10=<5V>,
    # EXP2 header
#    EXP2_1=PB14, EXP2_3=PB11, EXP2_5=PB0,  EXP2_7=PC10,  EXP2_9=<GND>,
#    EXP2_2=PB13, EXP2_4=PA15, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

############################################################################################################################
############################################################################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 171.805603
#*#
#*# [stepper_a]
#*# angle = 210.069494
#*# arm_length = 335.000000
#*# position_endstop = 332.273655
#*#
#*# [stepper_b]
#*# angle = 329.506753
#*# arm_length = 335.000000
#*# position_endstop = 333.139406
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 335.000000
#*# position_endstop = 333.220108
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.420
#*# pid_ki = 1.126
#*# pid_kd = 83.750
#*#
#*# [heater_bed]
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 34.4
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 46.6
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.015547, 0.015547, 0.015547, -0.117868, -0.171811, -0.185525, -0.132011, -0.132011, -0.132011
#*# 	0.110488, 0.110488, 0.053240, -0.011750, -0.007516, -0.062127, -0.081003, -0.099070, -0.099070
#*# 	0.204201, 0.110808, 0.072941, 0.028500, 0.032936, 0.033889, 0.039317, 0.032395, 0.032104
#*# 	0.204657, 0.127310, 0.093932, 0.097338, 0.087632, 0.097970, 0.090651, 0.069215, 0.100469
#*# 	0.082284, 0.046326, 0.024780, 0.004402, 0.030848, 0.135514, 0.146906, 0.130279, 0.192165
#*# 	0.065210, 0.043014, 0.014105, -0.000210, 0.011227, 0.012641, 0.033403, 0.042700, 0.135482
#*# 	0.102217, -0.011952, 0.003576, 0.034583, 0.017379, -0.012026, -0.002404, -0.031329, 0.049719
#*# 	0.074728, 0.074728, 0.043866, 0.027561, 0.012221, 0.003908, 0.006485, 0.107281, 0.107281
#*# 	0.124710, 0.124710, 0.124710, 0.081770, 0.058330, 0.099964, 0.092830, 0.092830, 0.092830
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = -125.0
#*# max_x = 125.0
#*# min_y = -125.0
#*# max_y = 125.0
#*#
#*# [delta_calibrate]
#*# height0 = -0.2
#*# height0_pos = 35467.000,35554.000,35561.000
#*# height1 = -0.2
#*# height1_pos = 42284.000,42428.000,31038.500
#*# height2 = -0.2
#*# height2_pos = 34226.500,46597.000,34311.000
#*# height3 = -0.2
#*# height3_pos = 31187.500,41206.500,41274.000
#*# height4 = -0.2
#*# height4_pos = 34126.000,34182.000,43178.500
#*# height5 = -0.2
#*# height5_pos = 40196.000,31575.000,40300.000
#*# height6 = -0.2
#*# height6_pos = 44693.500,34284.000,34246.500
